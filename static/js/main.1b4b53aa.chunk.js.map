{"version":3,"sources":["Modals/Combinations.js","Modals/Histogram.js","App.js","index.js"],"names":["initialValues","n0","n1","n2","n3","n4","n5","unique","Combinations","data","isUp","close","useState","counter","setCounter","values","setValues","handleEscape","useCallback","e","keyCode","useEffect","document","addEventListener","removeEventListener","count","forEach","element","checker","handleInputChange","event","target","value","name","Number","checkUniqueNumbers","array","uniqueNumbers","duplicateIndexs","index","includes","push","duplicate","a","b","every","i","className","onClick","stopPropagation","onSubmit","preventDefault","Object","slice","clear","length","type","onChange","min","max","Histogram","histogramData","setHistogramData","sorted","setSorted","displaySorted","setDisplaySorted","colors","flat","prev","number","sort","CustomTooltip","active","payload","label","ResponsiveContainer","width","height","BarChart","XAxis","dataKey","YAxis","CartesianGrid","strokeDasharray","Tooltip","content","Bar","map","entry","Cell","fill","App","selected","setSelected","drawn","setDrawn","same","sum","compared","setCompared","isMounted","useRef","histogramModal","toggleHistogramModal","combinationsModal","toggleCombinationsModal","setData","fetch","cors","then","response","text","result","split","cur","el","catch","error","console","log","disableUnchecked","current","compareArrays","openModal","handleChange","checked","prevSelected","addToSelected","id","doNotAddToSelected","filter","n","Array","from","querySelectorAll","checkbox","disabled","getRandomNumber","excluded","num","Math","floor","random","numbers","htmlFor","getNumbersCheckboxes","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b4b53aa.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\n\r\nconst initialValues = {\r\n  n0: \"\",\r\n  n1: \"\",\r\n  n2: \"\",\r\n  n3: \"\",\r\n  n4: \"\",\r\n  n5: \"\",\r\n  unique: []\r\n};\r\n\r\nexport function Combinations({ data, isUp, close }) {\r\n\r\n  const [counter, setCounter] = useState(null);\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const handleEscape = useCallback(e => {\r\n    if (e.keyCode === 27) close()\r\n  }, [close]);\r\n\r\n  useEffect(() => {\r\n    if (isUp) document.addEventListener('keydown', handleEscape, false)\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscape, false);\r\n      setValues(initialValues);\r\n    } \r\n  }, [handleEscape, isUp]);\r\n\r\n  useEffect(() => {\r\n    if(isUp) {\r\n      let count = 0;\r\n      data.forEach(element => {\r\n        if(checker(element, values.unique)) {\r\n          count++;\r\n        }\r\n      });\r\n      setCounter(count);\r\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.unique]); \r\n  \r\n  const handleInputChange = (event) => {\r\n    if(event.target.value > 49) event.target.value = 49;\r\n    if(event.target.value < 1 && event.target.value!==\"\") event.target.value = 1;\r\n    const { name, value } = event.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: Number(value) > 0 ? Number(value) : \"\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { unique, duplicate } = checkUniqueNumbers(Object.values(values).slice(0,-1));\r\n    const clear = {};\r\n    if(unique.length >= 0) {\r\n      duplicate.forEach(index => {\r\n        clear[\"n\"+index] = \"\";\r\n      });\r\n      setValues({\r\n        ...values,\r\n        ...clear,\r\n        unique: unique,\r\n      });\r\n    }\r\n  }\r\n\r\n  const checkUniqueNumbers = (array) => {\r\n    let uniqueNumbers = [];\r\n    let duplicateIndexs = [];\r\n    array.forEach((element, index) => {\r\n      if (!uniqueNumbers.includes(element) && element!==\"\") {\r\n        uniqueNumbers.push(element);\r\n      } else {\r\n        duplicateIndexs.push(index);\r\n      }\r\n    });\r\n    return { unique: uniqueNumbers, duplicate: duplicateIndexs };\r\n  }\r\n  \r\n  const checker = (a, b) => {\r\n    return b.every(i => a.includes(i));\r\n  }\r\n\r\n  return isUp ? (\r\n    <div\r\n    className=\"modal-backdrop\"\r\n    onClick={() => {\r\n      close();\r\n    }}\r\n    >\r\n      <div\r\n        className=\"modal-content\"\r\n        onClick={e => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <button onClick={close}>Close</button>\r\n        <h1>Combinations</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"number\"\r\n            value={values.n0}\r\n            onChange={handleInputChange}\r\n            name=\"n0\"\r\n            min={1} max={49}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            value={values.n1}\r\n            onChange={handleInputChange}\r\n            name=\"n1\"\r\n            min={1} max={49}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            value={values.n2}\r\n            onChange={handleInputChange}\r\n            name=\"n2\"\r\n            min={1} max={49}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            value={values.n3}\r\n            onChange={handleInputChange}\r\n            name=\"n3\"\r\n            min={1} max={49}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            value={values.n4}\r\n            onChange={handleInputChange}\r\n            name=\"n4\"\r\n            min={1} max={49}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            value={values.n5}\r\n            onChange={handleInputChange}\r\n            name=\"n5\"\r\n            min={1} max={49}\r\n          />\r\n          <button type=\"submit\"> Check </button>\r\n        </form>\r\n        {values.unique.length > 0 ? <p>your number(s) have been drawn {counter} time(s)</p> : <p>there were {data.length} draws</p>}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default Combinations;","import { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  CartesianGrid\r\n} from \"recharts\";\r\n\r\nexport function Histogram({ data, isUp, close }) {\r\n\r\n  const [histogramData, setHistogramData] = useState([]);\r\n  const [counter, setCounter] = useState([]);\r\n  const [sorted, setSorted] = useState([]);\r\n  const [displaySorted, setDisplaySorted] = useState(false);\r\n\r\n  const colors = [\"#1E90FF\", \"#187DE9\", \"#126AD2\", \"#0C56BC\", \"#0643A5\", \"#00308F\"];\r\n\r\n  const handleEscape = useCallback(e => {\r\n    if (e.keyCode === 27) close()\r\n  }, [close]);\r\n\r\n  useEffect(() => {\r\n    if (isUp) {\r\n      document.addEventListener('keydown', handleEscape, false);\r\n      setHistogramData(data.flat());\r\n    }\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscape, false)\r\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [handleEscape, isUp]); \r\n\r\n  useEffect(() => {\r\n    if(isUp) {\r\n      setCounter([]);\r\n      setSorted([]);\r\n      for(let i=1; i<50; i++) {\r\n        setCounter(prev => [...prev, {number: i, value: count(i)}]);\r\n      }\r\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [histogramData]); \r\n\r\n  useEffect(() => {\r\n    if(isUp) {\r\n      setSorted([...counter].sort(( a, b ) => b.value - a.value));\r\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [counter])\r\n\r\n  const count = (a) => {\r\n      let count = 0;\r\n      for(let i=0; i<histogramData.length; i++)\r\n          if (histogramData[i]===a)\r\n              count++;\r\n      return count;\r\n  };\r\n\r\n  const handleSwitch = (event) => {\r\n    setDisplaySorted(!displaySorted);\r\n  };\r\n\r\n  const checkSwitch = () => {\r\n    return displaySorted === false ? counter : sorted;\r\n  };\r\n\r\n//   function getRandomColor() {\r\n//     // R G B\r\n//     let letters = '0123456789ABCDEF'.split('');\r\n//     let color = '#';\r\n//     for (let i = 0; i < 6; i++ ) {\r\n//         color += letters[Math.floor(Math.random() * 16)];\r\n//     }\r\n//     return color; // '#FFFF' +\r\n// }\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        <p className=\"label\">{`number ${label} : ${payload[0].value}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n  return isUp ? (\r\n    <div\r\n    className=\"modal-backdrop\"\r\n    onClick={() => {\r\n      close();\r\n    }}\r\n    >\r\n      <div\r\n        className=\"modal-content\"\r\n        onClick={e => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <button onClick={close}>Close</button>\r\n        <h1>Histogram</h1>\r\n        <div className=\"switch-container\">\r\n          <label className=\"switch\"><input type=\"checkbox\" onChange={handleSwitch}/><div></div></label>\r\n        </div>\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n          <BarChart data={checkSwitch()}>\r\n            <XAxis dataKey=\"number\" />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Bar dataKey=\"value\">\r\n              {data.map((entry, index) => (\r\n                <Cell key={index} fill={colors[index % 6]} />\r\n              ))}\r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n        <p>...</p>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default Histogram;","import { useState, useEffect, useRef } from \"react\";\nimport Combinations from './Modals/Combinations';\nimport Histogram from './Modals/Histogram';\n\nimport './App.css';\n\nfunction App() {\n\n  const numbers = [1, 2,  3,  4,  5,  6,  7,  8,  9,  10, \n                  11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n                  21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\n                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n                  41, 42, 43, 44, 45, 46, 47, 48, 49];\n\n  const [selected, setSelected] = useState([]);\n  const [drawn, setDrawn] = useState([]);\n  const [compared, setCompared] = useState({same: [], sum: -1});\n  const isMounted = useRef(false);\n  \n  const [histogramModal, toggleHistogramModal] = useState(false);\n  const [combinationsModal, toggleCombinationsModal] = useState(false);\n\n  const [data, setData] = useState([]);\n  \n  useEffect(() => {\n    // https://justcors.com\n    let cors = \"https://justcors.com/tl_bc01f9c/\";\n    let file = \"http://www.mbnet.com.pl/dl.txt\";\n    fetch(cors + file)\n    .then((response) => response.text())\n    .then((result) => {\n      setData(result.split('\\r\\n').map(cur => cur.split(/ |,/).slice(2).map(el => Number(el))));\n    }).catch(error => {\n      setData(\"error\");\n      console.log(error);\n    });\n  }, [])\n\n  useEffect(() => {\n    disableUnchecked(); // think about this ;-)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selected]) \n\n  useEffect(() => {\n    if (isMounted.current) {\n      drawn.length > 0 ? setCompared(compareArrays(selected, drawn)) : setCompared({same: [], sum: -1});\n    } else {\n      isMounted.current = true;\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [drawn]) \n\n  const getNumbersCheckboxes = numbers => numbers.map(number => (\n    <div key={number}>\n      <input \n        name={number} \n        type=\"checkbox\" \n        id={number} \n        onChange={handleChange}/>\n      <label htmlFor={number}>{number}</label>\n    </div>\n  ));\n\n  const openModal = (e) => {\n    e.target.value === \"histogram\" ? toggleHistogramModal(!histogramModal) : toggleCombinationsModal(!combinationsModal);\n  }\n\n  const addToSelected = (number) => {\n    setSelected(prevSelected => [...prevSelected, Number(number)]);\n  }\n\n  const removeFromSelected = (number) => {\n    setSelected(prevSelected => [...prevSelected.filter(n => n!== Number(number))]);\n  }\n\n  const doNotAddToSelected = (e) => {\n    e.target.checked = false;\n  }\n\n  const handleChange = (e) => {\n    !e.target.checked ? removeFromSelected(e.target.id) : (selected.length < 6 ? addToSelected(e.target.id) : doNotAddToSelected(e));\n  }\n\n  const disableUnchecked = () => {\n    Array.from(document.querySelectorAll(\"input[type=checkbox]\"))\n       .forEach((checkbox) => {\n        !checkbox.checked && selected.length === 6 ? checkbox.disabled = true : checkbox.disabled = false;\n       });\n  }\n\n  const handleClear = (e) => {\n    setSelected([]);\n    setDrawn([]);\n    Array.from(document.querySelectorAll(\"input[type=checkbox]\"))\n       .forEach((checkbox) => {\n        checkbox.checked = false;\n       });\n  }\n\n  const handleDraw = () => {\n    let array = [];\n    for (let i = 0; i < 6; i++) {\n      array.push(getRandomNumber(array));\n    }\n    setDrawn(array);\n  }\n\n  const getRandomNumber = (excluded = []) => {\n    let num = 0;\n    do \n      num = Math.floor(Math.random() * (49 - 1 + 1) + 1);\n    while ( excluded.includes(num) )\n    return num;\n  };\n\n  const compareArrays = (a, b) => {\n    let same = [];\n    let sum = 0;\n    a.forEach(num => {\n      if(b.includes(num)) {\n        same.push(num);\n        sum++;\n      }\n    });\n    return {same: same, sum: sum};\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>simple lotto simulator</h1>\n        <div>\n        <button onClick={openModal} value=\"histogram\">histogram</button>\n        <button onClick={openModal} value=\"combinations\">combinations</button>\n        </div>\n      </header>\n      <main>\n        <div className=\"lotto-buttons\">\n          {selected.length === 6 && <button onClick={handleDraw}>draw</button>}\n          <button onClick={handleClear}>clear</button>\n        </div>\n        <div className=\"lotto-checkboxes\">\n          {getNumbersCheckboxes(numbers)}\n        </div>\n        {selected.length > 0 && <p>Yours: {selected.sort((a,b) => a - b).map(number => number+\" \")}</p>}\n        {drawn.length > 0 && <p>Last drawn: {drawn.sort((a,b) => a - b).map(number => number+\" \")}</p>}\n        {compared.sum !== -1 && <div className=\"results\">\n          <p>you hit {compared.sum} numbers!</p>\n          {compared.sum > 0  && <p>Same: {compared.same.sort((a,b) => a - b).map(number => number+\" \")}</p>}\n        </div>}\n      </main>\n      {data.length > 0 && <Histogram\n        data={data}\n        isUp={histogramModal}\n        close={() => {\n        toggleHistogramModal(false);\n        }}\n      />}\n      {data.length > 0 && <Combinations\n        data={data}\n        isUp={combinationsModal}\n        close={() => {\n        toggleCombinationsModal(false);\n        }}\n      />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}